Index: u-boot-2012.07/net/net.c
===================================================================
--- u-boot-2012.07.orig/net/net.c	2014-09-18 14:24:26.668679927 +0800
+++ u-boot-2012.07/net/net.c	2014-09-28 10:46:36.990336055 +0800
@@ -911,6 +911,17 @@
 	}
 }
 
+#ifdef CONFIG_ZLOADER_SUPPORTED
+/*-----------------------------------------------
+ * ZyXEL Multiboot
+ */
+static void (*zld_multiboot_handler)(char *, unsigned, unsigned, unsigned)=NULL;
+void net_set_multiboot_handler(void (*handler)(char *, unsigned, unsigned, unsigned))
+{
+	zld_multiboot_handler = handler;
+}
+#endif
+
 void
 NetReceive(uchar *inpkt, int len)
 {
@@ -1054,6 +1065,16 @@
 		}
 		/* If it is not for us, ignore it */
 		dst_ip = NetReadIP(&ip->ip_dst);
+#ifdef CONFIG_ZLOADER_SUPPORTED
+		//printf("det_ip=0x%08X(0x%08X)\n", dst_ip, htonl(dst_ip));
+		if (dst_ip == htonl(0xe1000000) && zld_multiboot_handler!= NULL) {
+			(*zld_multiboot_handler)((uchar *)ip + IP_UDP_HDR_SIZE,
+                                        ntohs(ip->udp_dst),
+                                        ntohs(ip->udp_src),
+                                        ntohs(ip->udp_len) - UDP_HDR_SIZE);
+			return;
+		}
+#endif
 		if (NetOurIP && dst_ip != NetOurIP && dst_ip != 0xFFFFFFFF) {
 #ifdef CONFIG_MCAST_TFTP
 			if (Mcast_addr != dst_ip)
@@ -1447,3 +1468,9 @@
 {
 	return string_to_VLAN(getenv(var));
 }
+
+ulong getNetBootFileXferSize(void)
+{
+    return NetBootFileXferSize;
+}
+
Index: u-boot-2012.07/common/exports.c
===================================================================
--- u-boot-2012.07.orig/common/exports.c	2014-09-18 14:24:26.088679945 +0800
+++ u-boot-2012.07/common/exports.c	2014-09-28 10:46:36.990336055 +0800
@@ -36,6 +36,28 @@
 # define spi_xfer          dummy
 #endif
 
+#ifndef CONFIG_ZLOADER_SUPPORTED
+# define net_set_multiboot_handler      dummy
+# define znand_init                     dummy
+# define znand_read                     dummy
+# define znand_oob_read                 dummy
+# define znand_write                    dummy
+# define znand_erase                    dummy
+# define znand_block_size               dummy
+# define znand_page_size                dummy
+# define znand_oob_size                 dummy
+# define zflash_init                    dummy
+# define zflash_read                    dummy
+# define zflash_write                   dummy
+# define zflash_erase                   dummy
+# define zflash_block_size              dummy
+# define zpio_cfg                       dummy
+# define zpio_set                       dummy
+# define zpio_get                       dummy
+# define zpio_max_num                   dummy
+# define zpio_dump_regs                 dummy
+#endif
+
 void jumptable_init(void)
 {
 	gd->jt = malloc(XF_MAX * sizeof(void *));
Index: u-boot-2012.07/include/_exports.h
===================================================================
--- u-boot-2012.07.orig/include/_exports.h	2014-09-18 14:24:26.356679938 +0800
+++ u-boot-2012.07/include/_exports.h	2014-09-28 10:49:25.199675848 +0800
@@ -30,3 +30,43 @@
 EXPORT_FUNC(spi_claim_bus)
 EXPORT_FUNC(spi_release_bus)
 EXPORT_FUNC(spi_xfer)
+EXPORT_FUNC(memset)
+EXPORT_FUNC(memcpy)
+EXPORT_FUNC(memcmp)
+EXPORT_FUNC(strcpy)
+EXPORT_FUNC(strncmp)
+EXPORT_FUNC(strlen)
+EXPORT_FUNC(sprintf)
+EXPORT_FUNC(flush_cache)
+EXPORT_FUNC(net_init)
+EXPORT_FUNC(eth_init)
+EXPORT_FUNC(eth_halt)
+EXPORT_FUNC(eth_set_current)
+EXPORT_FUNC(eth_rx)
+EXPORT_FUNC(eth_send)
+EXPORT_FUNC(getNetBootFileXferSize)
+EXPORT_FUNC(clear_ctrlc)
+EXPORT_FUNC(do_run)
+EXPORT_FUNC(do_tftpb)
+EXPORT_FUNC(net_set_multiboot_handler)
+EXPORT_FUNC(znand_init)
+EXPORT_FUNC(znand_read)
+EXPORT_FUNC(znand_oob_read)
+EXPORT_FUNC(znand_write)
+EXPORT_FUNC(znand_erase)
+EXPORT_FUNC(znand_block_size)
+EXPORT_FUNC(znand_page_size)
+EXPORT_FUNC(znand_oob_size)
+EXPORT_FUNC(zflash_init)
+EXPORT_FUNC(zflash_read)
+EXPORT_FUNC(zflash_write)
+EXPORT_FUNC(zflash_erase)
+EXPORT_FUNC(zflash_block_size)
+EXPORT_FUNC(zpio_cfg)
+EXPORT_FUNC(zpio_set)
+EXPORT_FUNC(zpio_get)
+EXPORT_FUNC(zpio_max_num)
+EXPORT_FUNC(zpio_dump_regs)
+EXPORT_FUNC(image_check_hcrc)
+EXPORT_FUNC(image_check_dcrc)
+EXPORT_FUNC(saveenv)
Index: u-boot-2012.07/include/exports.h
===================================================================
--- u-boot-2012.07.orig/include/exports.h	2014-09-18 14:24:26.592679934 +0800
+++ u-boot-2012.07/include/exports.h	2014-09-28 10:46:36.990336055 +0800
@@ -27,12 +27,39 @@
 #if defined(CONFIG_CMD_I2C)
 int i2c_write (uchar, uint, int , uchar* , int);
 int i2c_read (uchar, uint, int , uchar* , int);
+void * memset(void *, int, size_t);
+void * memcpy(void *, const void *, size_t);
+int memcmp(const void *, const void *, size_t);
+char * strcpy(char *, const char *);
 #endif
 
 void app_startup(char * const *);
 
+void net_set_multiboot_handler(void (*handler)(char *, unsigned, unsigned, unsigned));
+ulong getNetBootFileXferSize(void);
 #endif    /* ifndef __ASSEMBLY__ */
 
+#ifdef CONFIG_ZLOADER_SUPPORTED
+int znand_init(void);
+int znand_read(unsigned long offs, unsigned long len, char *buf);
+int znand_oob_read(unsigned long offs, char *oobbuf);
+int znand_write(unsigned long offs, unsigned long boundary, unsigned long len, char *buf);
+int znand_erase(unsigned long offs, unsigned long boundary, unsigned long len);
+unsigned long znand_block_size(void);
+unsigned long znand_page_size(void);
+unsigned long znand_oob_size(void);
+int zflash_init(void);
+int zflash_read(unsigned long offs, unsigned long len, char *buf);
+int zflash_write(unsigned long offs, unsigned long len, char *buf);
+int zflash_erase(unsigned long offs, unsigned long len);
+unsigned long zflash_block_size(unsigned long blkNo);
+int zpio_cfg(int pio, int dir);
+int zpio_set(int pio, int level);
+int zpio_get(int pio, int *level);
+int zpio_max_num(void);
+void zpio_dump_regs(void);
+#endif
+
 enum {
 #define EXPORT_FUNC(x) XF_ ## x ,
 #include <_exports.h>
@@ -41,7 +68,7 @@
 	XF_MAX
 };
 
-#define XF_VERSION	6
+#define XF_VERSION	7
 
 #if defined(CONFIG_X86)
 extern gd_t *global_data;
Index: u-boot-2012.07/Makefile
===================================================================
--- u-boot-2012.07.orig/Makefile	2014-09-18 14:24:21.508680061 +0800
+++ u-boot-2012.07/Makefile	2014-09-28 10:46:36.990336055 +0800
@@ -232,6 +232,9 @@
 ifeq ($(CONFIG_TIZEN),y)
 LIBS += lib/tizen/libtizen.o
 endif
+ifeq ($(CONFIG_ZLOADER_SUPPORTED),y)
+LIBS += lib/zloader/libzloader.o
+endif
 LIBS += $(shell if [ -f board/$(VENDOR)/common/Makefile ]; then echo \
 	"board/$(VENDOR)/common/lib$(VENDOR).o"; fi)
 LIBS += $(CPUDIR)/lib$(CPU).o
@@ -361,6 +364,10 @@
 __OBJS := $(subst $(obj),,$(OBJS))
 __LIBS := $(subst $(obj),,$(LIBS)) $(subst $(obj),,$(LIBBOARD))
 
+########################################################################
+ifeq ($(CONFIG_ZLOADER_SUPPORTED),y)
+$(shell mkdir -p include/cpu/$(CPU);cp -a $(CPUDIR)/config.mk include/cpu/$(CPU)/)
+endif
 #########################################################################
 #########################################################################
 
@@ -696,8 +703,16 @@
 		$(obj)board/*/config.tmp $(obj)board/*/*/config.tmp \
 		$(obj)include/autoconf.mk $(obj)include/autoconf.mk.dep
 
+#ZLOADER_OPTIONS:= \
+	CONFIG_EMBEDDED_KERNEL_IN_ROOTFS \
+	CONFIG_ZLOADER_SUPPORTED \
+	CONFIG_ZLOADER_ROMD_SUPPORTED \
+	CONFIG_ZLOADER_ROMFILE_SUPPORTED
+
 %_config::	unconfig
 	@$(MKCONFIG) -A $(@:_config=)
+#	@$(foreach v, $(ZLOADER_OPTIONS), \
+		$(if $($(v)),echo "#define $(v) 1">>$(obj)include/config.h;))
 
 sinclude $(obj).boards.depend
 $(obj).boards.depend:	boards.cfg
Index: u-boot-2012.07/drivers/mtd/ipq_spi_flash.c
===================================================================
--- u-boot-2012.07.orig/drivers/mtd/ipq_spi_flash.c	2014-09-18 14:24:26.200679942 +0800
+++ u-boot-2012.07/drivers/mtd/ipq_spi_flash.c	2014-09-28 10:46:36.990336055 +0800
@@ -125,7 +125,9 @@
 	int ret;
 	struct mtd_info *mtd;
 
+#ifndef CONFIG_SF_DEFAULT_SPEED
 #define CONFIG_SF_DEFAULT_SPEED		(48 * 1000 * 1000)
+#endif
 
 	flash = spi_flash_probe(CONFIG_SF_DEFAULT_BUS,
 				CONFIG_SF_DEFAULT_CS,
Index: u-boot-2012.07/include/common.h
===================================================================
--- u-boot-2012.07.orig/include/common.h	2014-09-18 14:24:26.364679938 +0800
+++ u-boot-2012.07/include/common.h	2014-09-28 10:46:36.990336055 +0800
@@ -222,6 +222,8 @@
 #define MIN(x, y)  min(x, y)
 #define MAX(x, y)  max(x, y)
 
+#define __maybe_unused      __attribute__((unused))
+
 /*
  * Return the absolute value of a number.
  *
Index: u-boot-2012.07/mkconfig
===================================================================
--- u-boot-2012.07.orig/mkconfig	2014-09-28 10:46:36.946336056 +0800
+++ u-boot-2012.07/mkconfig	2014-09-28 10:46:36.990336055 +0800
@@ -173,6 +173,17 @@
 echo "#define CONFIG_BOARD_${TMP_NAME} 1" >> config.h
 echo "#define CONFIG_BOARD_NAME \"${TMP_NAME}\"" >> config.h
 
+ZLOADER_OPTIONS="\
+	CONFIG_EMBEDDED_KERNEL_IN_ROOTFS \
+        CONFIG_ZLOADER_SUPPORTED \
+        CONFIG_ZLOADER_ROMD_SUPPORTED \
+        CONFIG_ZLOADER_ROMFILE_SUPPORTED"
+
+for i in ${ZLOADER_OPTIONS}; do
+	eval opt=\$$i
+	[ ${opt} = y ] && echo "#define ${i} 1" >> config.h
+done
+
 cat << EOF >> config.h
 #define CONFIG_BOARDDIR board/$BOARDDIR
 #include <config_cmd_defaults.h>
Index: u-boot-2012.07/common/cmd_bootm.c
===================================================================
--- u-boot-2012.07.orig/common/cmd_bootm.c	2014-09-18 14:24:26.068679945 +0800
+++ u-boot-2012.07/common/cmd_bootm.c	2014-09-28 10:46:36.990336055 +0800
@@ -452,7 +452,12 @@
 		setenv("filesize", buf);
 		return 0;
 	}
+  #if 0 // byte-order has been chnaged (see 'bootm_start()')!
 	appl = (int (*)(int, char * const []))(ulong)ntohl(images.ep);
+  #else
+    appl = (int (*)(int, char * const []))(ulong)(images.ep);
+  #endif
+    //printf("jump to 0x%p\n", appl);
 	(*appl)(argc-1, &argv[1]);
 	return 0;
 }
Index: u-boot-2012.07/drivers/net/ipq/ipq_gmac_eth.c
===================================================================
--- u-boot-2012.07.orig/drivers/net/ipq/ipq_gmac_eth.c	2014-09-18 14:24:26.264679940 +0800
+++ u-boot-2012.07/drivers/net/ipq/ipq_gmac_eth.c	2014-09-28 10:46:36.990336055 +0800
@@ -139,6 +139,11 @@
 	ipq_mac_cfg |= (FRAME_BURST_ENABLE | TX_ENABLE | RX_ENABLE);
 
 	writel(ipq_mac_cfg, &mac_reg->conf);
+#ifdef CONFIG_ZLOADER_SUPPORTED
+    /* Enable GMAC to receive all multicast packets (used for multiboot) */
+    ipq_mac_cfg = readl(&mac_reg->framefilt) | (1<<4);
+    writel(ipq_mac_cfg, &mac_reg->framefilt);
+#endif
 }
 
 static void ipq_eth_dma_cfg(struct eth_device *dev)
Index: u-boot-2012.07/common/main.c
===================================================================
--- u-boot-2012.07.orig/common/main.c	2014-09-18 14:24:26.100679944 +0800
+++ u-boot-2012.07/common/main.c	2014-09-28 10:46:36.990336055 +0800
@@ -269,6 +269,33 @@
 
 /****************************************************************************/
 
+#ifdef CONFIG_ZLOADER_SUPPORTED
+void fake_sys_halt(void)
+{
+    int i=0;
+    char passwd[]={'q','u','i','t'}, ch;
+    ulong timer;
+    puts("Reset your board! system halt...");
+    timer=get_timer(0);
+    do {
+        if ( tstc() ) {
+            ch=getc();
+            if (ch==passwd[i]) {
+                i++;
+                timer=get_timer(0);
+            } else {
+                i=0;
+            }
+        }
+        if ( get_timer(timer)>160 /*ms*/ ) {
+            i=0;
+            timer = get_timer(0);
+        }
+    } while (i<sizeof(passwd));
+    putc('\n');
+}
+#endif
+
 void main_loop (void)
 {
 #ifndef CONFIG_SYS_HUSH_PARSER
@@ -345,6 +372,7 @@
 	update_tftp (0UL);
 #endif /* CONFIG_UPDATE_TFTP */
 
+#ifndef CONFIG_ZLOADER_SUPPORTED
 #if defined(CONFIG_BOOTDELAY) && (CONFIG_BOOTDELAY >= 0)
 	s = getenv ("bootdelay");
 	bootdelay = s ? (int)simple_strtol(s, NULL, 10) : CONFIG_BOOTDELAY;
@@ -396,7 +424,32 @@
 	}
 #endif /* CONFIG_MENUKEY */
 #endif /* CONFIG_BOOTDELAY */
-
+#else
+  #define xstr(s) str(s)
+  #define str(s) #s
+  #ifdef CONFIG_ZLOADER_PART_ADDR
+    setenv("zld_paddr", xstr(CONFIG_ZLOADER_PART_ADDR));
+  #else
+    #error "You should define 'CONFIG_ZLOADER_PART_ADDR'"
+    /* TODO: to calculate zloader partition address */
+  #endif
+  #ifdef CONFIG_ZLOADER_PART_SIZE
+    setenv("zld_psize", xstr(CONFIG_ZLOADER_PART_SIZE));
+  #else
+    #error "You should define 'CONFIG_ZLOADER_PART_SIZE'"
+    /* TODO: to calculate zloader partition size */
+  #endif
+  { DECLARE_GLOBAL_DATA_PTR;
+    gd->flags |= GD_FLG_DISABLE_CONSOLE;
+    setenv("boot_zld", CONFIG_BOOT_ZLOADER_CMD);
+    if ( run_command("run boot_zld", 0) ) { /* something wrong */
+        gd->flags &= (~GD_FLG_DISABLE_CONSOLE);
+        printf("\n!!!!! fail to boot zloader !!!!!\n");
+        /* TODO: setup LED indicator */
+        fake_sys_halt();
+    }
+  }
+#endif /* CONFIG_ZLOADER_SUPPORTED */
 	/*
 	 * Main Loop for Monitor Command Processing
 	 */
